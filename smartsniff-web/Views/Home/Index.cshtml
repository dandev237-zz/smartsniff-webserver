@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>
        SmartSniff - Heatmap
    </title>
    <!-- link to leaflet css -->
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
    <!-- map is full width and height of device -->
    <meta name="viewport" content="width=device-width, maximum-scale=1.0, user-scalable=no" />
    <!-- jquery -->
    <script src="~/js/jquery-3.1.0.min.js"></script>
    <!-- leaflet js -->
    <script src="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.js"></script>
    <!-- heatmap js -->
    <script src="~/js/heatmap.min.js"></script>
    <!-- leaflet.heat js -->
    <script src="~/js/leaflet-heatmap.js"></script>
    <style>
        body {
            padding: 0;
            margin: 0;
        }

        html, body, #map {
            height: 100%;
        }
    </style>
</head>
<body>
    <div id="map">
    </div>
    <script>
        $(document).ready(function () {
            $.ajax({
                url: 'http://localhost:5001/api/db/getheatmapdata',
                type: 'GET',
                dataType: "json",
                cache: false, //GET request are cached by browsers
            }).done(function (response) {
                var i;
                for (i = 0; i < response.length; i++) {
                    var post = response[i];
                    var point = {
                        lat: post.lat,
                        lng: post.lng,
                        count: post.count
                    }

                    heat_points.data.push(point);
                }

                //Since this is an asynchronous call, we have to set the data points
                //on the heatmap layer now
                heatmapLayer.setData(heat_points);
            });
        })

        //Heatmap points object
        var heat_points = {
            data: []
        };

        //Heatmap Code
        var baseLayer = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'SmartSniff',
            maxZoom: 17
        });

        var cfg = {
            "radius": 20,
            "maxOpacity": .8,
            //scaleRadius - scales the radius based on current map zoom
            "scaleRadius": false,
            //useLocalExtrema - if false, global maximum is used for colorization
            //                  if true, the maximum within the current map boundaries will be used
            "useLocalExtrema": true,
            //Field name in the data which represents the latitude
            latField: 'lat',
            //Field name in the data which represents the longitude
            lngField: 'lng',
            //Field name in the data which represents the data value
            valueField: 'count'
        };

        var heatmapLayer = new HeatmapOverlay(cfg);

        var map = new L.map('map', {
            center: new L.LatLng(36.718225, -4.420264),
            zoom: 12,
            layers: [baseLayer, heatmapLayer]
        });
    </script>

</body>
</html>